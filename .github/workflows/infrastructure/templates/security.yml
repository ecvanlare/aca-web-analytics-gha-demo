name: Security Scanning Template

on:
  workflow_call:
    inputs:
      working_directory:
        description: 'Directory containing Terraform files to scan'
        required: false
        type: string
        default: 'terraform/'

permissions:
  contents: read
  pull-requests: write

jobs:
  security_scanning:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Download Terraform plan output
      uses: actions/download-artifact@v4
      with:
        name: terraform-plan-output
        path: ./

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.7.0

    - name: Check Terraform code formatting
      working-directory: ${{ inputs.working_directory }}
      run: |
        echo "::group::Terraform Format Check"
        terraform fmt -check -recursive
        echo "::endgroup::"
      continue-on-error: true

    - name: Install TFLint
      run: |
        curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
        sudo mv tflint /usr/local/bin/

    - name: Run TFLint code quality checks
      working-directory: ${{ inputs.working_directory }}
      run: |
        echo "::group::TFLint Results"
        tflint --init
        tflint --format compact
        echo "::endgroup::"
      continue-on-error: true 

    - name: Run Checkov security scanning
      uses: bridgecrewio/checkov-action@v12
      with:
        directory: ${{ inputs.working_directory }}
        framework: terraform
        output_format: cli
        quiet: true
      continue-on-error: true 

    - name: Post Terraform plan to pull request
      uses: actions/github-script@v7 
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const planOutput = fs.readFileSync('plan_output.txt', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `#### ðŸš€ Terraform Plan Preview for this PR\n\`\`\`hcl\n${planOutput}\n\`\`\`\n\n_Review the plan carefully before merging._`
          });
        github-token: ${{ secrets.GITHUB_TOKEN }}
