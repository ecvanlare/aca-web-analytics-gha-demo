name: 'Security Scanning'
description: 'Reusable security scanning for Terraform code'

inputs:
  working_directory:
    description: 'Working directory for Terraform'
    required: false
    default: 'terraform/'

runs:
  using: composite
  steps:
    - name: Checkout repository code
      uses: actions/checkout@v4

    - name: Download Terraform Plan Output
      uses: actions/download-artifact@v4
      with:
        name: terraform-plan-output
        path: ${{ inputs.working_directory }}

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.12.1

    - name: Check Terraform code formatting
      working-directory: ${{ inputs.working_directory }}
      shell: bash
      run: |
        echo "::group::Terraform Format Check"
        terraform fmt -check -recursive
        echo "::endgroup::"

    - name: Install TFLint
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: v0.48.0

    - name: Run TFLint
      working-directory: ${{ inputs.working_directory }}
      shell: bash
      run: |
        echo "::group::TFLint"
        tflint --init
        tflint
        echo "::endgroup::"

    - name: Run Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: ${{ inputs.working_directory }}
        framework: terraform
        output_format: sarif
        output_file_path: checkov-results.sarif

    - name: Post Terraform Plan to PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = '${{ inputs.working_directory }}/tfplan.txt';
          
          if (fs.existsSync(path)) {
            const planOutput = fs.readFileSync(path, 'utf8');
            
            const comment = `## Terraform Plan ðŸ“‹
            
            <details>
            <summary>Click to expand Terraform plan</summary>
            
            \`\`\`
            ${planOutput}
            \`\`\`
            
            </details>`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }
